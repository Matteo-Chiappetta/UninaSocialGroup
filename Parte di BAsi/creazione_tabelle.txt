--Creare tabella utente

create table Utente(
	username varchar(20) not NULL,
	email varchar(60) Primary key,
	password varchar(60) Not NULL,
	img_profilo varchar(100),
	descrizione varchar(300)
);


----------------------------------------------
create table Amicizia(
	email_utente_1 varchar(60),
	email_utente_2 varchar(60),
	constraint fk_utente_1 Foreign key (email_utente_1)references Utente(email) ON DELETE CASCADE,
	constraint fk_utente_2 Foreign key (email_utente_2)references Utente(email) ON DELETE CASCADE,
	constraint amicizia_unica UNIQUE (email_utente_1, email_utente_2)
);

-------------------------------------------------------------------------------------------------------
//ATTENZIONE
create table profilo(
	img_profilo varchar(100),
	descrizione varchar(300),
	email_utente varchar(60) unique,
	constraint fk_email Foreign key (email_utente) references Utente(email) On delete cascade
);

//TABELLA RIMOSSA: ACCORPATA CON UTENTE.
---------------------------------------------------------------------------
create table Gruppo(
	tag varchar(20) Primary key,
	tema varchar(20) not null,
	email_creatore varchar(60)not null,
	constraint fk_creatore foreign key(email_creatore) references Utente (email)
);
----------------------------------------------------------------------------------------
create table Partecipanti_al_gruppo(
	email_membro varchar(60),
	tag_gruppo varchar(20),
	constraint fk_email foreign key (email_membro) references Utente(email) on delete cascade,
	constraint fk_tag foreign key (tag_gruppo) references gruppo(tag) on delete cascade
);
----------------------------------------------------------------------------------------
create table Post(
	id_post SERIAL PRIMARY KEY,		
	data_ora_post timestamp default current_timestamp,
	didascalia varchar(300) NOT NULL ,
	percorso_file varchar(100),
	tipo_file varchar(20) not null check(tipo_file IN ('post_semplice','post_con_media')),
	email_creatore_post varchar(60),
	tag_gruppo varchar(20),
	constraint fk_tag foreign key (tag_gruppo) references gruppo(tag),
	constraint fk_email_creatore_post foreign key (email_creatore_post) references utente(email)
);
--------------------------------------------------------------------------------------------------------
CREATE TYPE tipo_post AS ENUM ('post_semplice','post_con_media');
------------------------------------------------------------------------------------------------

create table Notifica(
	id_notifica SERIAL primary key ,
	data_ora_notifica timestamp default current_timestamp,
	id_post_pubblicato integer,
	constraint fk_post foreign key (id_post_pubblicato) references post(id_post)
);

----------------------------------------------------------------------------------

create table Raggiunge(
	email_utente varchar(60),
	id_notifica INTEGER,
	constraint fk_email foreign key (email_utente) references utente(email),
	constraint fk_id_notifica foreign key (id_notifica) references notifica(id_notifica),
	Constraint notifica_unica unique (email_utente,id_notifica)
);

----------------------------------------------------------------------------------

create table Commento(
	id_commento SERIAL primary key,
	data_ora_commento timestamp default current_timestamp ,
	commento varchar(300)not null,
	email_utente varchar(60),
	id_post integer,
	constraint fk_email foreign key (email_utente) references Utente(email),
	constraint fk_post foreign key (id_post) references post(id_post)
);

--------------------------------------------------------------------------------------------

create table Mi_piace(
	id_mi_piace SERIAL primary key,
	data_ora_mi_piace timestamp default current_timestamp,
	email_utente varchar(60),
	id_post integer,
	constraint fk_email foreign key (email_utente) references Utente(email),
	constraint fk_post foreign key (id_post) references post(id_post),
	Constraint mi_piace_unica unique (email_utente, id_post)
);

-----------------------------------------------------------------------------------
create table richiesta(
	accettato BOOLEAN,
	data_ora_richiesta timestamp default current_timestamp,
	email_utente varchar(60),
	tag_gruppo varchar(20),
	constraint fk_tag foreign key(tag_gruppo) references Gruppo (tag),
	constraint fk_utente foreign key(email_utente) references Utente (email)
)